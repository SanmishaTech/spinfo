name: 'Profile Management'
description: |-

  API for Managing Profile data
endpoints:
  -
    httpMethods:
      - GET
    uri: api/profiles
    metadata:
      groupName: 'Profile Management'
      groupDescription: |-

        API for Managing Profile data
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Authorization: 'Bearer '
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/profiles/{id}'
    metadata:
      groupName: 'Profile Management'
      groupDescription: |-

        API for Managing Profile data
      subgroup: ''
      subgroupDescription: ''
      title: 'Show Profile'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Authorization: 'Bearer '
    urlParameters:
      id:
        name: id
        description: 'The ID of the profile.'
        required: true
        example: sed
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: sed
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/profiles/{id}'
    metadata:
      groupName: 'Profile Management'
      groupDescription: |-

        API for Managing Profile data
      subgroup: ''
      subgroupDescription: ''
      title: 'Update Profile'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Authorization: 'Bearer '
    urlParameters:
      id:
        name: id
        description: 'The ID of the profile.'
        required: true
        example: perspiciatis
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: perspiciatis
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of the user.'
        required: false
        example: qui
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      mobile:
        name: mobile
        description: 'The mobile number of the user.'
        required: false
        example: id
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      pan:
        name: pan
        description: 'The pan number of the user.'
        required: false
        example: nobis
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      address_1:
        name: address_1
        description: 'The address_1 of the user.'
        required: false
        example: alias
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      address_2:
        name: address_2
        description: 'The address_1 of the user.'
        required: false
        example: nobis
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      city:
        name: city
        description: 'The city of the user.'
        required: false
        example: quibusdam
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      state:
        name: state
        description: 'The state of the user.'
        required: false
        example: rem
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      pincode:
        name: pincode
        description: 'The pincode of the user.'
        required: false
        example: est
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      bank_name:
        name: bank_name
        description: 'The bank name of the user.'
        required: false
        example: fugit
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      account_name:
        name: account_name
        description: 'The account name of the user.'
        required: false
        example: quae
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      account_no:
        name: account_no
        description: 'The account number of the user.'
        required: false
        example: aliquid
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      ifsc:
        name: ifsc
        description: 'The ifsc number of the user.'
        required: false
        example: aspernatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      business_name:
        name: business_name
        description: 'The business_name of the user.'
        required: false
        example: nam
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      gstin:
        name: gstin
        description: 'The gstin of the user.'
        required: false
        example: sequi
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      name: qui
      mobile: id
      pan: nobis
      address_1: alias
      address_2: nobis
      city: quibusdam
      state: rem
      pincode: est
      bank_name: fugit
      account_name: quae
      account_no: aliquid
      ifsc: aspernatur
      business_name: nam
      gstin: sequi
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/profiles/{parent_id}/get_profiles'
    metadata:
      groupName: 'Profile Management'
      groupDescription: |-

        API for Managing Profile data
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Authorization: 'Bearer '
    urlParameters:
      parent_id:
        name: parent_id
        description: 'The ID of the parent.'
        required: true
        example: suscipit
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      parent_id: suscipit
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/profiles/{profile_no}/get_ref_profile'
    metadata:
      groupName: 'Profile Management'
      groupDescription: |-

        API for Managing Profile data
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Authorization: 'Bearer '
    urlParameters:
      profile_no:
        name: profile_no
        description: ''
        required: true
        example: non
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      profile_no: non
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"message":" Profiles Retrived successfully","data":{"Profiles":[]}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '59'
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
