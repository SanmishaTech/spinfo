name: 'Profile Management'
description: |-

  API for Managing Profile data
endpoints:
  -
    httpMethods:
      - GET
    uri: 'api/profiles/{id}'
    metadata:
      groupName: 'Profile Management'
      groupDescription: |-

        API for Managing Profile data
      subgroup: ''
      subgroupDescription: ''
      title: 'Show Profile'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Authorization: 'Bearer '
    urlParameters:
      id:
        name: id
        description: 'The ID of the profile.'
        required: true
        example: rerum
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: rerum
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/profiles/{id}'
    metadata:
      groupName: 'Profile Management'
      groupDescription: |-

        API for Managing Profile data
      subgroup: ''
      subgroupDescription: ''
      title: 'Update Profile'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Authorization: 'Bearer '
    urlParameters:
      id:
        name: id
        description: 'The ID of the profile.'
        required: true
        example: animi
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: animi
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of the user.'
        required: false
        example: dolorem
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      mobile:
        name: mobile
        description: 'The mobile number of the user.'
        required: false
        example: ipsum
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      pan:
        name: pan
        description: 'The pan number of the user.'
        required: false
        example: quam
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      address_1:
        name: address_1
        description: 'The address_1 of the user.'
        required: false
        example: velit
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      address_2:
        name: address_2
        description: 'The address_1 of the user.'
        required: false
        example: minima
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      city:
        name: city
        description: 'The city of the user.'
        required: false
        example: veniam
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      state:
        name: state
        description: 'The state of the user.'
        required: false
        example: corporis
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      pincode:
        name: pincode
        description: 'The pincode of the user.'
        required: false
        example: quisquam
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      bank_name:
        name: bank_name
        description: 'The bank name of the user.'
        required: false
        example: sapiente
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      account_name:
        name: account_name
        description: 'The account name of the user.'
        required: false
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      account_no:
        name: account_no
        description: 'The account number of the user.'
        required: false
        example: nobis
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      ifsc:
        name: ifsc
        description: 'The ifsc number of the user.'
        required: false
        example: praesentium
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      business_name:
        name: business_name
        description: 'The business_name of the user.'
        required: false
        example: et
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      gstin:
        name: gstin
        description: 'The gstin of the user.'
        required: false
        example: debitis
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      name: dolorem
      mobile: ipsum
      pan: quam
      address_1: velit
      address_2: minima
      city: veniam
      state: corporis
      pincode: quisquam
      bank_name: sapiente
      account_name: consequatur
      account_no: nobis
      ifsc: praesentium
      business_name: et
      gstin: debitis
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
