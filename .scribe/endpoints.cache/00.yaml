## Autogenerated by Scribe. DO NOT MODIFY.

name: 'User Management'
description: |-

  API for Managing Users
endpoints:
  -
    httpMethods:
      - POST
    uri: api/register
    metadata:
      groupName: 'User Management'
      groupDescription: |-

        API for Managing Users
      subgroup: ''
      subgroupDescription: ''
      title: 'Register User'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Authorization: 'Bearer '
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 255 characters.'
        required: true
        example: mx
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: ecassin@example.com
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      mobile:
        name: mobile
        description: 'Must match the regex /^\+(?:\d{1}.'
        required: true
        example: '+:6'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      pan:
        name: pan
        description: 'Must match the regex /^([a-zA-Z]){5}([0-9]){4}([a-zA-Z0-9]){1}?$/.'
        required: true
        example: BcQrU3139N
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      password:
        name: password
        description: 'Must be at least 6 characters.'
        required: true
        example: p373pwEC4
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      password_confirmation:
        name: password_confirmation
        description: ''
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      parent_id:
        name: parent_id
        description: ''
        required: true
        example: ea
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      ref_id:
        name: ref_id
        description: ''
        required: true
        example: qui
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      name: mx
      email: ecassin@example.com
      mobile: '+:6'
      pan: BcQrU3139N
      password: p373pwEC4
      password_confirmation: consequatur
      parent_id: ea
      ref_id: qui
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/login
    metadata:
      groupName: 'User Management'
      groupDescription: |-

        API for Managing Users
      subgroup: ''
      subgroupDescription: ''
      title: 'Login User'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Authorization: 'Bearer '
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: daniela.cartwright@example.net
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      password:
        name: password
        description: 'Must be at least 6 characters.'
        required: true
        example: q@8K3na)m
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      email: daniela.cartwright@example.net
      password: q@8K3na)m
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/logout
    metadata:
      groupName: 'User Management'
      groupDescription: |-

        API for Managing Users
      subgroup: ''
      subgroupDescription: ''
      title: 'Logout User'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Authorization: 'Bearer '
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
