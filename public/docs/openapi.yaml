openapi: 3.0.3
info:
  title: 'SP Info API Documentation'
  description: ''
  version: 1.0.0
servers:
  - url: ''
paths:
  '/api/payment/{profile_id}':
    get:
      summary: 'Show Payment'
      operationId: showPayment
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Payment Management'
      security: []
    parameters:
      - in: path
        name: profile_id
        description: 'The ID of the profile.'
        example: doloremque
        required: true
        schema:
          type: string
  /api/profiles:
    get:
      summary: ''
      operationId: getApiProfiles
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Profile Management'
      security: []
  '/api/profiles/{id}':
    get:
      summary: 'Show Profile'
      operationId: showProfile
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Profile Management'
      security: []
    put:
      summary: 'Update Profile'
      operationId: updateProfile
      description: ''
      parameters: []
      responses: {}
      tags:
        - 'Profile Management'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'The name of the user.'
                  example: quia
                mobile:
                  type: string
                  description: 'The mobile number of the user.'
                  example: accusamus
                pan:
                  type: string
                  description: 'The pan number of the user.'
                  example: dignissimos
                address_1:
                  type: string
                  description: 'The address_1 of the user.'
                  example: perferendis
                address_2:
                  type: string
                  description: 'The address_1 of the user.'
                  example: nobis
                city:
                  type: string
                  description: 'The city of the user.'
                  example: suscipit
                state:
                  type: string
                  description: 'The state of the user.'
                  example: consequatur
                pincode:
                  type: string
                  description: 'The pincode of the user.'
                  example: deserunt
                bank_name:
                  type: string
                  description: 'The bank name of the user.'
                  example: eaque
                account_name:
                  type: string
                  description: 'The account name of the user.'
                  example: deleniti
                account_no:
                  type: string
                  description: 'The account number of the user.'
                  example: fuga
                ifsc:
                  type: string
                  description: 'The ifsc number of the user.'
                  example: ea
                business_name:
                  type: string
                  description: 'The business_name of the user.'
                  example: ut
                gstin:
                  type: string
                  description: 'The gstin of the user.'
                  example: dolores
      security: []
    parameters:
      - in: path
        name: id
        description: 'The ID of the profile.'
        example: sed
        required: true
        schema:
          type: string
  '/api/profiles/get_profiles/{parent_id}':
    get:
      summary: ''
      operationId: getApiProfilesGet_profilesParent_id
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Profile Management'
      security: []
    parameters:
      - in: path
        name: parent_id
        description: 'The ID of the parent.'
        example: commodi
        required: true
        schema:
          type: string
  /api/register:
    post:
      summary: 'Register User'
      operationId: registerUser
      description: ''
      parameters: []
      responses: {}
      tags:
        - 'User Management'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: mx
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: ecassin@example.com
                mobile:
                  type: string
                  description: 'Must match the regex /^\+(?:\d{1}.'
                  example: '+:6'
                pan:
                  type: string
                  description: 'Must match the regex /^([a-zA-Z]){5}([0-9]){4}([a-zA-Z0-9]){1}?$/.'
                  example: BcQrU3139N
                password:
                  type: string
                  description: 'Must be at least 6 characters.'
                  example: p373pwEC4
                password_confirmation:
                  type: string
                  description: ''
                  example: consequatur
                parent_id:
                  type: string
                  description: ''
                  example: ea
                ref_id:
                  type: string
                  description: ''
                  example: qui
              required:
                - name
                - email
                - mobile
                - pan
                - password
                - password_confirmation
                - parent_id
                - ref_id
      security: []
  /api/login:
    post:
      summary: 'Login User'
      operationId: loginUser
      description: ''
      parameters: []
      responses: {}
      tags:
        - 'User Management'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: daniela.cartwright@example.net
                password:
                  type: string
                  description: 'Must be at least 6 characters.'
                  example: q@8K3na)m
              required:
                - email
                - password
      security: []
  /api/logout:
    post:
      summary: 'Logout User'
      operationId: logoutUser
      description: ''
      parameters: []
      responses: {}
      tags:
        - 'User Management'
      security: []
tags:
  - name: 'Payment Management'
    description: ' `'
  - name: 'Profile Management'
    description: "\nAPI for Managing Profile data"
  - name: 'User Management'
    description: "\nAPI for Managing Users"
components:
  securitySchemes:
    default:
      type: http
      scheme: bearer
      description: 'You can retrieve your token by visiting your dashboard and clicking <b>Generate API token</b>.'
security:
  - default: []
